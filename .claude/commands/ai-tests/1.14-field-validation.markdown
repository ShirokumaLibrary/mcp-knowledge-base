# Field Validation Tests

Test that get_items returns only ListItem fields and get_item_detail returns full UnifiedItem fields.

## Test 14.1: Verify get_items Field Structure

### Create Test Issue with All Fields
```
Tool: create_item
Parameters: {
  type: "issues",
  title: "Field Test Issue",
  description: "Testing field output structure",
  content: "This is detailed content that should NOT appear in list view",
  priority: "high",
  status: "Open",
  tags: ["test-field", "validation"],
  start_date: "2025-01-01",
  end_date: "2025-12-31",
  related_tasks: ["issues-1"],
  related_documents: ["docs-1"]
}
Expected: Success, returns full item object with:
- related: ["issues-1", "docs-1"] (merged array)
- related_tasks: ["issues-1"]
- related_documents: ["docs-1"]
```

### Get Items List - Check Fields
```
Tool: get_items
Parameters: {type: "issues"}
Validation:
- MUST include: id, type, title, description, status, priority, tags, updated_at
- MAY include: date (for sessions/dailies only)
- MUST NOT include: content, status_id, start_date, end_date, start_time, related, related_tasks, related_documents, created_at
- Field count should be exactly 8 for issues/plans/docs
```

### Verify Field Values
For the created issue in the list:
- title: "Field Test Issue"
- description: "Testing field output structure" (NOT empty)
- priority: "high" (NOT undefined)
- status: "Open" (NOT undefined)
- tags: ["test-field", "validation"]
- content: Should NOT exist in response
- related_tasks: Should NOT exist in response

## Test 14.2: Verify get_item_detail Full Structure

### Get Full Item Details
```
Tool: get_item_detail
Parameters: {type: "issues", id: <created_id>}
Validation:
- MUST include ALL fields: id, type, title, description, content, priority, status, status_id, start_date, end_date, start_time, tags, related, related_tasks, related_documents, created_at, updated_at
- content: "This is detailed content that should NOT appear in list view"
- start_date: "2025-01-01"
- end_date: "2025-12-31"
- related: ["issues-1", "docs-1"] (merged from related_tasks and related_documents)
- related_tasks: ["issues-1"]
- related_documents: ["docs-1"]
```

## Test 14.3: Search by Tag Field Validation

### Search Items by Tag
```
Tool: search_items_by_tag
Parameters: {tag: "test-field"}
Validation:
- Returns grouped structure with tasks/documents
- Each item should have full UnifiedItem fields (for backward compatibility)
- Check that content field exists but is empty string
- Check that related_tasks/related_documents exist (even if empty arrays)
```

## Test 14.4: Document Types Field Validation

### Create Test Document
```
Tool: create_item
Parameters: {
  type: "docs",
  title: "Field Test Document",
  description: "Document field validation",
  content: "# Document Content\n\nThis is the full document content.",
  tags: ["doc-test"]
}
Expected: Success
```

### List Documents - Check Fields
```
Tool: get_items
Parameters: {type: "docs"}
Validation:
- Same field restrictions as issues
- No content field in list
- Description should be present
```

## Test 14.5: Session Type Field Validation

### Create Test Session
```
Tool: create_item
Parameters: {
  type: "sessions",
  title: "Field Test Session",
  description: "Session field test",
  content: "Session activities...",
  category: "testing"
}
Expected: Success
```

### List Sessions - Check Special Fields
```
Tool: get_items
Parameters: {type: "sessions"}
Validation:
- Should include 'date' field (special for sessions/dailies)
- Total fields: 9 (includes date)
- No content, no category in list view
```

## Test 14.6: Legacy API Field Compatibility

### Get All Types Summary
```
Tool: get_types
Validation:
- Returns grouped structure
- No impact from ListItem changes
```

### Get All Tags
```
Tool: get_tags
Validation:
- Returns tag names only
- No impact from ListItem changes
```

## Expected Results Summary
- get_items: Returns minimal ListItem fields (8-9 fields max)
- get_item_detail: Returns complete UnifiedItem with all fields
- search_items_by_tag: Returns UnifiedItem structure for compatibility
- No content in list views
- No internal fields (status_id) exposed
- Description field always present for summaries