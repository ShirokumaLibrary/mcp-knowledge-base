# SHIROKUMA.md (Simplified Version)

AI Pair Programming with shirokuma-knowledge-base MCP - Core Principles

## ðŸŽ¯ Fundamental Truth
**AI Memory = Zero After Session End**
- Every new conversation starts from scratch
- All context must be externalized to MCP
- Continuity depends on explicit documentation

## ðŸ“‹ Four Core Principles

### 1. Issue-Driven Development
- **No code without an issue** - Every change needs a "why"
- **Clear context required** - Future AI needs to understand
- **Link everything** - Code â†’ Issue â†’ Documentation

### 2. Continuity Through Documentation
- **Session start**: Restore context from MCP
- **During work**: Record decisions immediately  
- **Session end**: Update state for next AI

### 3. Quality Through Method
- **TDD**: Test â†’ Code â†’ Refactor (always in this order)
- **Tidy First**: Separate structure changes from behavior changes
- **Document "why"**: Code shows "what", docs explain "why"

### 4. Validate Through External Search
- **Technical decisions need validation** - Don't rely on internal knowledge alone
- **Use WebSearch for best practices** - Check current standards and patterns
- **Record validation results** - Include sources and findings in decisions

## ðŸš€ Quick Start Commands

```bash
# Start your session
/ai-start                  # Restore context and begin work

# During work
/ai-remember               # Record decisions (with validation option)
/ai-check validate         # Check items needing validation

# End your session  
/ai-finish                 # Save context and handover
```

## ðŸ¤– Specialist Agents

| Agent | Purpose | When to Use |
|-------|---------|-------------|
| **mcp-specialist** | MCP operations expert | Complex queries, bulk operations |
| **methodology-keeper** | Quality guardian | Ensure best practices |
| **issue-manager** | Issue tracking | Task management |
| **knowledge-curator** | Knowledge organization | Document learning |
| **session-automator** | Workflow automation | Start/end sessions |

## ðŸ“š Detailed Guides

For comprehensive documentation, consult specialist agents:

- **MCP Operations** â†’ Ask `shirokuma-mcp-specialist`
- **Development Methods** â†’ Ask `shirokuma-methodology-keeper`  
- **Issue Management** â†’ Ask `shirokuma-issue-manager`
- **Knowledge Organization** â†’ Ask `shirokuma-knowledge-curator`
- **Session Workflows** â†’ Ask `shirokuma-session-automator`

## âš¡ Essential MCP Operations

### Restore Context (Session Start)
- Retrieve overall project state
- Check last session for continuity
- Review active work items

### Save Progress (During Work)
- Record important decisions immediately
- Update progress on active tasks
- Document learnings and patterns
- For technical decisions: validate with web search
- Tag items appropriately for future reference

### Handover (Session End)
- Update project state for next AI
- Summarize daily accomplishments
- Close session with clear next steps

## ðŸŽ“ Remember

1. **You are stateless** - Next session's AI won't remember anything
2. **Issues drive work** - Create before coding
3. **Tests come first** - Red â†’ Green â†’ Refactor
4. **Document immediately** - If you think it, record it
5. **Use specialists** - Each agent has deep expertise
6. **Validate externally** - Technical decisions need web search verification

---

*For the complete 755-line detailed guide, see SHIROKUMA-full.md*  
*For specific expertise, consult the specialist agents*